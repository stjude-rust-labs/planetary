# Additional secrets used to pull container images.
imagePullSecrets: []

# Configuration related to running tasks.
tasks:
  # The name of the namespace where task pods will be created
  namespace: planetary-tasks

# Configuration relating to the Planetary database.
#
# This configuration applies whether you're using the pod-based Postgres
# database _or_ an external database.
database:
  # The default service name for the Postgres database.
  # Assumes that the database service is in the same namespace as Planetary.
  host: planetary-database
  # The port to use for the accessing the database.
  port: 5432
  # The database user.
  user: postgres
  # The database name.
  name: planetary
  # The name of the Kubernetes secret that stores the PostgreSQL database
  # password.
  passwordSecret: planetary-database
  # The key within the Kubernetes secret containing the PostgreSQL database
  # password.
  passwordSecretKey: password

# Configuration for an included PostgreSQL instance.
#
# This configuration is specific to the pod-based Postgres database.
postgresql:
  # Whether to deploy a PostgreSQL instance as part of this chart.
  # Set to `false` if you want to use an external database.
  # Set to `true` if you want to use a pod-based database.
  enabled: false
  # The password for the PostgreSQL database.
  # Required if `postgresql.enabled` is true.
  password: null
  # The PostgreSQL image to use.
  image:
    name: postgres
    tag: "16"
  # The service type for the database.
  service:
    type: ClusterIP
    port: 5432
  resources:
    requests:
      cpu: 2000m
    limits:
      memory: 4Gi
  # Storage configuration for PostgreSQL data.
  storage:
    # The size of the persistent volume for PostgreSQL data.
    size: 8Gi
    # The storage class to use. If `null`, uses the default storage class.
    storageClass: null

# Configuration relating to the service responsible for
# implementing the TES API.
api:
  replicas: 2
  image:
    name: stjude-rust-labs/planetary-api
    tag: null
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      cpu: 2000m
    limits:
      memory: 4Gi
  log: info

# Configuration relating to the orchestrator service that is
# responsible for running tasks to completion.
orchestrator:
  replicas: 2
  image:
    name: stjude-rust-labs/planetary-orchestrator
    tag: null
  account:
    create: true
    name: orchestrator-service-account
  service:
    type: ClusterIP
    port: 8080
  storageClass: null # use default storage class
  resources:
    requests:
      cpu: 2000m
    limits:
      memory: 4Gi
  log: info

# Configuration relating to the monitor service that is responsible
# for ensuring tasks do not become orphaned.
monitor:
  image:
    name: stjude-rust-labs/planetary-monitor
    tag: null
  account:
    create: true
    name: monitor-service-account
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      cpu: 2000m
    limits:
      memory: 4Gi
  log: info

# Configuration relating to the transporter used by Planetary for
# transferring files to and from cloud storage.
transporter:
  image:
    name: stjude-rust-labs/planetary-transporter
    tag: null
  storage:
    # Configuration for S3
    s3: null
    #   # The default region to use for `s3://` URLs.
    #   awsDefaultRegion: "<default-region>"
    #   # The AWS Access Key Id to use for authentication.
    #   # Required if `awsSecretAccessKey` is set.
    #   awsAccessKeyId: "<access-key-id>"
    #   # The AWS Secret Access Key to use for authentication.
    #   # Required if `awsAccessKeyId` is set.
    #   awsSecretAccessKey: "<secret-access-key>"
    # Configuration for Google Cloud Storage
    google: null
    #   # The Google Cloud Storage HMAC access key to use for authentication.
    #   # Required if `hmacSecret` is set.
    #   hmacAccessKey: "<access-key>"
    #   # The Google Cloud Storage HMAC secret to use for authentication.
    #   # Required if `hmacAccessKey` is set.
    #   hmacSecret: "<secret>"
