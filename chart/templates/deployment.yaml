# Deployment for the Planetary API service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planetary-api
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: planetary-api
          image: "{{ .Values.api.image.name }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
          - name: RUST_LOG
            value: {{ .Values.api.log }}
          - name: DATABASE_USER
            value: {{ .Values.database.user }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.passwordSecret }}
                key: {{ .Values.database.passwordSecretKey }}
          - name: DATABASE_HOST
            value: {{ .Values.database.host }}
          - name: DATABASE_PORT
            value: "{{ .Values.database.port }}"
          - name: DATABASE_NAME
            value: {{ .Values.database.name }}
          - name: DATABASE_URL
            value: postgres://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)
          - name: ORCHESTRATOR_URL
            value: "http://planetary-orchestrator:{{ .Values.orchestrator.service.port }}"
---
# Deployment for the Planetary orchestrator service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planetary-orchestrator
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.orchestrator.replicas }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: orchestrator
  template:
    metadata:
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: orchestrator
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.orchestrator.account.name }}
      containers:
        - name: planetary-orchestrator
          image: "{{ .Values.orchestrator.image.name }}:{{ .Values.orchestrator.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.orchestrator.resources | nindent 12 }}
          env:
          - name: RUST_LOG
            value: {{ .Values.orchestrator.log }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: DATABASE_USER
            value: {{ .Values.database.user }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.passwordSecret }}
                key: {{ .Values.database.passwordSecretKey }}
          - name: DATABASE_HOST
            value: {{ .Values.database.host }}
          - name: DATABASE_PORT
            value: "{{ .Values.database.port }}"
          - name: DATABASE_NAME
            value: {{ .Values.database.name }}
          - name: DATABASE_URL
            value: postgres://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)
          - name: TRANSPORTER_IMAGE
            value: "{{ .Values.transporter.image.name }}:{{ .Values.transporter.image.tag | default .Chart.AppVersion }}"
          - name: TASKS_NAMESPACE
            value: {{ .Values.tasks.namespace }}
          {{- with .Values.orchestrator.storageClass }}
          - name: STORAGE_CLASS
            value: "{{- . }}"
          {{- end }}
---
# Deployment for the Planetary task monitor
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planetary-monitor
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: monitor
  template:
    metadata:
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: monitor
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.monitor.account.name }}
      containers:
        - name: planetary-monitor
          image: "{{ .Values.monitor.image.name }}:{{ .Values.monitor.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.monitor.resources | nindent 12 }}
          env:
          - name: RUST_LOG
            value: {{ .Values.monitor.log }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: DATABASE_USER
            value: {{ .Values.database.user }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.passwordSecret }}
                key: {{ .Values.database.passwordSecretKey }}
          - name: DATABASE_HOST
            value: {{ .Values.database.host }}
          - name: DATABASE_PORT
            value: "{{ .Values.database.port }}"
          - name: DATABASE_NAME
            value: {{ .Values.database.name }}
          - name: DATABASE_URL
            value: postgres://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)
          - name: PLANETARY_NAMESPACE
            value: "{{ .Release.Namespace }}"
          - name: TASKS_NAMESPACE
            value: {{ .Values.tasks.namespace }}
          - name: ORCHESTRATOR_URL
            value: "http://planetary-orchestrator:{{ .Values.orchestrator.service.port }}"
